---
- name: Ensure Docker is installed
  hosts: todo

  tasks:
    - name: When Ubuntu ensure Docker is installed
      block:
        - name: Install aptitude using apt
          apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
          become: yes

        - name: Install required system packages
          apt: name={{ item }} state=latest update_cache=yes
          loop: ['ca-certificates', 'curl', 'gnupg', 'lsb-release']
          become: yes

        - name: Add Docker GPG apt Key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present
          become: yes

        - name: Add Docker Repository
          apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu bionic stable
            state: present
          become: yes

        - name: Update apt and install Docker
          apt: name={{ item }} state=latest update_cache=yes
          loop: ['docker-ce', 'docker-ce-cli', 'containerd.io']
          become: yes

        - name: Make sure Docker is enabled and started
          ansible.builtin.systemd:
            name: docker
            enabled: yes 
            state: started
          become: yes

        # After this logout and login again for changes to take effect.
        #
        - name: Ensure {{ USER }} is in the docker group 
          user:
            name: "{{ USER }}"
            groups: docker
            append: yes
          become: yes
      when: ( ansible_distribution == 'Ubuntu' )

  # - name: When Windows ensure Docker is installed
  #     block:

  #       - name: Install Docker
  #         chocolatey.chocolatey.win_chocolatey:
  #           name: "docker-desktop"
  #           state: present

  #       # After this logout and login again for changes to take effect.
  #       #
  #       - name: Ensure {{ USER }} is in the docker group 
  #         user:
  #           name: "{{ USER }}"
  #           groups: docker
  #           append: yes
  #         become: yes
  #     when: ( ansible_distribution == 'Windows' )