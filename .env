#!/usr/bin/env bash

# Copyright (C) Abigail Mabe - All Rights Reserved
#
# You may use, distribute, and modify this code under the terms of the license.
#
# A copy of the license should have been received with this code.
# If not, please email <mabe.abby.a@gmail.com>

## Echo text with color based off of message type.
##
## e.g., `warn "This is a warning."`
##
function message() {

	local no_color='\033[0m'

	if [ "$2" == "success" ]; then
		local color='\033[0;32m'
	elif [ "$2" == "special" ]; then
		local color='\033[0;35m'
	elif [ "$2" == "alert" ]; then
		local color='\033[1;31m'
	elif [ "$2" == "warn" ]; then
		local color='\033[1;33m'
	elif [ "$2" == "error" ]; then
		local color='\033[0;31m'
	else
		local color='\033[0m'
	fi

 	echo -e "${color}$1${no_color}"
}

## Checks that one node is ready.
##
function check_cluster_ready(){

	message
	message "Wait for node to be ready..." "warn"
	message

	kubectl wait --for=condition=Ready nodes --all --timeout=600s

	message "Node status is Ready=True!"
	message

	# message
	# message "Checking that the cluster info can be reached..." "warn"
	# message "Will exit otherwise." "alert"
	# message

	# ## The user can check the node, too.
	# ##
	# message "To do this yourself, run the following in another terminal: "
	# message "kubectl get node" "special"
	# message "Output should resemble:"
	# message "NAME                       STATUS   ROLES                  AGE   VERSION"
	# message "k3d-k3s-default-server-0   Ready    control-plane,master   25m   v1.22.6+k3s1"

	# ## Grab node state.
	# ##
	# ## e.g., "Ready=True"
	# ##
	# node_ready=$(export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' \
	# 				&& kubectl get nodes -o jsonpath="$JSONPATH" | grep -o "Ready=True")

	# ## Node should be "Ready=True".
	# ##
	# if [ "$node_ready" == "Ready=True" ]; then
	# 	message
	# 	message "Success! Cluster is ready with 1 node." "success"
	# 	message
	# else
	# 	message
	# 	message "ERROR: Cluster does not have 1 node ready." "error"
	# 	message "Node status was:" "error"
	# 	message $node_ready "alert"
	# 	message

	# 	exit 
	# fi
}

# function prompt_for_password() {

# 	message
# 	message "Action required" "alert"
# 	read -p "Enter your password:" password
	

# }